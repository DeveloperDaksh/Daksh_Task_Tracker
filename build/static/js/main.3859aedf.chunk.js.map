{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3859aedf.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (    \r\n    <button onClick={onClick}\r\n    style={{backgroundColor: color}}\r\n    className='btn'>\r\n        {text}</button>\r\n    )\r\n}\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button'\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const onClick =() =>{\r\n        console.log('Click')\r\n    }\r\n    return (\r\n        <header className='header'>\r\n            <h1> {title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} \r\n            text={showAdd ? 'Close' : 'Add '} \r\n            onClick={onAdd}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Daksh Task Tracker'\r\n}\r\n\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>\r\n            {task.text} \r\n            <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={onDelete}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({ tasks, onDelete , onToggle}) => {\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task)=>(\r\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit =(e) =>{\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e)=> setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e)=> setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder }\r\n                value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n            \r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App=() => {\n  const [showAddTask, setShowAddTask]= useState(true)\n\n\n  const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text: 'Github Repo',\n      day: 'july 21st at 2:00pm',\n      reminder: true,\n    }\n  ])\n\n  const addTask =() => {\n    const id=Math.floor(Math.random() * 10000)+1 \n    const newTask ={id, ...tasks}\n    setTasks([...tasks, newTask])\n  }\n  const deleteTask = (id ) => {\n    setTasks(tasks.filter((task)=> task.id !==id))\n  }\n\n  const toggleReminder =(id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder}: task))\n  }\n  return (\n    <div className=\"container\">\n      <Header  \n      onAdd={()=> setShowAddTask(!showAddTask)} \n      showAdd={showAddTask}\n      />\n      {showAddTask &&<AddTask onAdd={addTask }/>}\n      {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>):('No Tasks to show')}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}